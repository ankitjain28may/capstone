name: CI/CD

on: [push]

jobs:
  hadolint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Hadolint test
      run: |
        cd app
        wget https://github.com/hadolint/hadolint/releases/download/v1.17.5/hadolint-Linux-x86_64 -O hadolint
        chmod +x hadolint
        ./hadolint Dockerfile
  
  npm-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
    - uses: actions/checkout@v1

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: npm install
      run: cd app && npm install
  
    - name: npm run pretest
      run: |
        cd app
        npm run pretest
        
  build:
    runs-on: ubuntu-latest
    needs: ['hadolint', 'npm-test']
    steps:
      - uses: actions/checkout@v1
      - name: Build Docker image
        run: |
          cd app
          docker build -t ankitjain28/capstone:$GITHUB_SHA .
          docker login --username ankitjain28 -p $DOCKER_PASSWORD
          docker push ankitjain28/capstone:$GITHUB_SHA
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}


  deployment:
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
      - uses: actions/checkout@v1
      - name: Installing pip
        run: |
          sudo apt-get update -y
          sudo apt-get install unzip python3-pip python3-setuptools awscli -y
          pip3 install --upgrade awscli
      
      - name: Deploying on K8s
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          aws eks update-kubeconfig --name eks-cluster --kubeconfig kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          ./kubectl get pods -n kube-system
          ./kubectl apply -f app-k8s/app-ns.yaml --validate=false
          ./kubectl apply -f app-k8s/app-svc.yaml --validate=false
          ./kubectl apply -f app-k8s/app-deployment.yaml --validate=false
          ./kubectl apply -f app-k8s/app-ingress.yaml --validate=false

          ./kubectl get pods -n app
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'ap-south-1'